---
#==========================================================================================#
#                                    Install Docker                                        #
#==========================================================================================#

- name: install Docker
  hosts : app
  become: yes
  tasks:

  - block: #======================= Block Ubuntu ========================
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Install docker and its dependecies
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    when: ansible_facts['distribution'] == 'Ubuntu'

#======================= End block Ubuntu ========================

  - block: #======================= Block Centos ===========================
    - name: Remove the Docker package
      yum:
        name:
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine
        state: absent

    - name: Ensure yum-utils is installed
      yum:
        name: yum-utils
        state: latest

    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo
      become: yes

    - name: Enable Docker Edge repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-edge'
        option: enabled
        value: 0
      become: yes

    - name: Enable Docker Test repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-test'
        option: enabled
        value: 0
      become: yes

    - name: Ensure Docker is installed
      yum:
        name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        state: latest
    when: ansible_facts['distribution'] == 'CentOS'
#======================= End Block Centos =========================

  - name: Add my user to docker group
    user:
      name: ansible
      group: docker

  - name: Start Docker
    service:
      name: docker
      state: started
      enabled: yes

#==========================================================================================#
#                                    Install PostgreSQL                                    #
#==========================================================================================#

- name: install PostgreSQL on Ubuntu
  hosts : database
  become: yes
  vars:
    pg_version: "{{ pgversion }}"
    data_dir: "{{ datadir }}"

  tasks:

  - fail: msg="You must supply pg version to install like -e pgversion=9.5"
    when: pg_version is not defined

  - name: find ubuntu main repository name
    command: "lsb_release -cs"
    register: ubuntu_release

  - debug: var=ubuntu_release.stdout

  - name: import repository keys
    apt_key:
      url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
      state: present

  - name: check if repository is added
    apt_repository:
      repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ubuntu_release.stdout}}-pgdg main"
      state: present

  - name: update cache before install
    apt: update_cache=yes

  - name: install PostgreSQL {{pg_version}}
    apt:
      name: postgresql-{{pg_version}}
      state: present

  - name: Start PostgreSQL
    service:
      name: postgresql
      state: started
      enabled: yes

  - block: #======================= Create data_dir if set  ===========================
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ data_dir }}"
        state: directory
        recurse: yes
        owner: postgres
        group: postgres
        mode: '0700'

    - name: Ensure the default Postgresql bind address is 0.0.0.0
      lineinfile:
        path: /etc/postgresql/{{pg_version}}/main/postgresql.conf
        regexp: '^data_directory '
        line: data_directory = '{{ data_dir }}'
      notify:
        - restart postgresql
    when: data_dir is defined
#======================= End Create data_dir if set  ===========================
  handlers:
  - name: restart postgresql
    service:
      name: postgresql
      state: restarted